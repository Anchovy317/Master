1. Introduccion a criptografia:
    La criptografia es una disciplinna que se basa en conceptos y tecnicas matematicas para 'garantizar la comunicacion digital y proteger informacion sensible'. Tiene coomo obj proteger la confidencialidad
    integridad y auth de la informacion. Utilizacion de cifrado 'avanzado y firmas digitales' como elementos valiosos de la privacidad y seguridad.
        1. Codidencialidad:
             Se centra en prevenir la divulgacion de informacion, los "algoritmos de cifrado" protegen los datos mediante la utilizcion de una 'clave secreta' para convertir el texto claro en un texto cifrado
             legible unicamente por el destinatario previamente establecido.
                1. Proteccion de datos sensibles
                2. Competitividad empresarial

        2. Integridad:
            Detecta y evita modificacione en la informacion, 'firmas digitales' es fundamental para asegurar que los datos no se hayan alterado. Solo necesitamos que un solo bit de los datos cambien para que
            la firma sea distinta; esto permite a las partes que se comunican, realizar comprobaciones de integridad con respecto a su informacion y asegurarse de que nada haya cambiado.
                1. Prevencion de manipulacion
                2. Garantia en trasacciones
        3. Autenticidad/ Autenticacion (no repudio):
            Permite atribuir de manera confiable una identidad al remitente de una msj o al autor de la informacion. Esta propiedad es crucial para evitar el no repudio que el autor pueda autorizar el msj,
            los certificados digitales son una tools muy util para la auth, porque se basan en funciones hash y cifrado de clave pub:
                1. Seguridad en la comunicacion
                2. Prevencion de sumplementacion
        El equilibrio adecuado entre estos tres pilares crea un entrono seguri en el que la innformacion puede influir sin temor a acceso no autorizado.

    2. Primitivas criptograficas:
        1. Numeros aleatorios
        2. Cifrado simetrico o de clave secreta
        3. Cifrado asimetrico o de clave pub:
        4. Funciones hash
        5. Firmas digitales
    3. Para que sirve la aleatoriedad:
        1. Generacion de claves criptografiacas:
            En la generacion de claves es un proceso critico para garantizar la seguirdad de los sistemas. Repercusiones:
                1. Eliminacion de patrones
                2. Resistencia a ataques
        2. Generacion de nuemro criptograficos:
            Se utiliza para generar numeros criptograficos, como los que usan en algoritmos de cifrado y firmas digitales. La falta de patrones en estos numeros ayudan a que el sistema sea mas seguro.
                1. No repeticion
                2. Dificultad de prediccion
        3. Vector de Iniciacion(IV) en cifrado:
            En los cifrados simetricos, tales como el modo de operacio CBC (Cipher Block Chainin), la aleatoriedad se utiliza para generar vectores de inicializacion.
                1. Prevencion en firmas digitales:  Los IV evitan que los bloques identicos en el mensaje original generen cifras identicas.
        4.Protocolos de generacion de numero aleatorios:
            Seguridad en firmas: Anhaden capas de seguirdad, evitando la posibilidad de que adivinen o reproduzcan los valores generados
2. Cifrado simetrico o de clave secreta:
    Los algoritmos de cifrado simetrico o de clave priv se subdivide en 2 grupos:\
        CLAVE PUB --- CLAVE PRIV: CIFRADO EN FLUJO CIFRADO EN bloque
    1. La libreta de flujo por exelencia es una libreta de un solo uso, en la que el msj se mezcla con una clave igual de larga [ C = m * k]
        Los generadosre pseudoaleatorios generaban la secuencia cifrante (keystream)k, apartir de una semilla s, que constituye la clave de cifrado. Esta secuencia cifrante se mezcla con el mensaje.
        Como Vernam, la mayoria de los cifrados en flujo propuestos hasta la fecha en la literatura de activos.
        Un cifrado de flujo aditivo binario  es un cifrado en flujo sincronimo(la secuencia k se calcula idependiente del texto claro m y cifrado c) en el los digitos de la secuencia cifrantem de texto
        claro y del texto son binarios y la funcion de salida f es la funcion XOR:
    2. Cifrado en bloques:
        Se enfoca en la tarea de tratar el texto claro de manera distinta, dividiendo en bloques de igual longuitud para ser cifrados de forma bloque bloque. Se utiliza un tamanho de bloque de 64 o 128 bits
        igual que con el cifrado en flujo , en este ambos users comparten una clave de cifrado simetrica.
        El texto claro original no es un multiplo exacto  del tamanho en bloque, por lo que hay que recurir a esquemas de relleno[https://es.wikipedia.org/wiki/Esquema_de_relleno], los bits restantes
        hasta completar el tamanho de bloque se rellenan(pading) con bits extras seguiendo algun tipo de convencion, esto garantiza que cada bloque posea la longuitud necesaria para el proceso de cifrado.

3. Cifrado asimetrico o de clave pub:
    En 1976  Whitfield Diffie, Martin Hellman y Ralph Merkle  modificaron el panorama de la seguiridad informatica con la introduccion de la criptografia asimetrica o clave pub.
    En el diagrama se puede apreciar las etapas del proceso: M(mensaje), E(cifrado), C(mensaje cifrado), D(descifrado), M(mensaje descifrado):
        - Una kpub, conocida por cualquiera
        - Una kpri, que es confidencail y solo la conoce el propietario
    En una clave publica y privada estan estrechamente relacionadas, que apartir de la pub, es computacionalmente imposible deducir la clave priv. Los algoritmos de la pub se contruyen con la funcion unidireccional;
        - y=f (x) es facil de calcular, pero
        - y=f(-1)(y) resulta inviable computacionalmente

    -Porque sucede esto:
        1. Factorizacion de enteros: se utiliza el algoritmo RSA, de dos numeros primeros grandes es sencillo de obtener, pero factorizar dichos es dificil
        2. Logaritmo discreto: Metodo Diffie-Hellman que se basa en la dif de resover la ecuacion g(y)=x; conocidos x y g resulta muy dificil encontrar y.
    -La criptografia mas eficaz el la hibrida:
        1. Los algoritmos de 'criptografia de clave secreta' se caracteriza por su rapidez, lo que los convierte en idoneos para cifrar grandes volumenes de datos.
        2. Los de de clave pub, son mas lentos perfectos para cifrar la clave secreta utilizando crifrado de clave secreta.
4. Funcion hash:
    Una fuincion hash es una opeacion matematicas denotada como H, que transforma un bloque de datos de tamanho variable m en un valor hash de tamanho h=M(m). La calidad de una funcion se mide por una capacidad
    de producir salidas uniformes y pseudoaleatorios para un amplio rango de entradas.
    Fundamental de una funcion hash es asegurar su integridad de los datos. En la entrada m causara un cambio significante para su entrada hash, afectando alrededor de 50% de sus bits.
    [SHA256(“2”) =d4 73 5e 3a 26 5e 16 ee e0 3f 59 71 8b 9b 5d 03 01 9c 07 d8 b6 c5 1f 90 da 3a 66 6e ec 13 ab 35]
    [SHA256(“3”) =4e 07 40 85 62 be db 8b 60 ce 05 c1 de cf e3 ad 16 b7 22 30 96 7d e0 1f 64 0b 7e 47 29 b4 9f ce]

    -Popiedades de una funcion hash:
        1. Universalidad: Procesar cualquier cadena de datos, sin imp su tamanho
        2. CompresionL Genera un tamanho fijo
        3. Eficacioa: Calculo del hash para una cadena de n bits se realiza en tiempo lineal O(n)
    -Propiedades adicionales:
        1. Resistencia a preimagen: es imposible encontrar un mensaje cualquier que produzca el mismo hash
        2. Resistencia a la seguinda premiagen : Es imposible encontrar otro mensaje que produzca el mismo hash.
        3. Resistencia a colisiones: imposible encontrar dos mensajes cualquiera que produzca el mismo hash.

    -Lista de requisitos:
        1. Tamanho de entrada variables: H se aplica a un bloque de datos de cualquier tamaho
        2. Tamanho de salida fijo: H produce una salida de longuitud fija
        3. Eficacia: H(x) es relativamente facil de calcular para cualquier x dada, permitiendo que tanto las implementaciones de hardware como de sofware sean practicas
        4. Resistente a premiagenes: Para cualqier valor hash dado h, es computablemente inviable encontrar y distonto a x tal que H(x)=h
        5. Resistente a la seguinda premiagen: Para cualquier x dado, es computacionalmente inviable encontrar y dist x H(y)=H(x)
        6. Resistente a las colisiones: Es computacionalmente inviable encontrar cualquier par (x,y) con x  distinto a y tal H(y)=H(x)
        7. pseudoaleatoriedad: La salida H supera a las pruebas estandar de pseudoaleatorios

    -Algoritmos:
        -SHA-2
        -SHA-3
        -Whirlpool
        -BLAKE
        -RIPEMD-160
        -SHA-2
        -SHA-3
        -MD5
        -RIPEMD-128
        -SHA-1
        -SHA-3
    -Funciones:
        1. Authe de mensajes
        2. Firmas digitales
        3. Proteccion de pass, deteccion de instruccuones y virus, blockchain

5. Firmas digitales y certificados digitales:
    -Como es el proceso:
        1. Firmas un mensaje: Para la firma m, este se cifra con una clave privada del propietario (kpr), dando como resultado s=sing(kpu, m) = Ekpr(m), solo el propietario realiza esta operacion.
        2. Verificar la firma: El mensaje original y el mensaje firmado (CIFRADO)(m,s) se comparten publicamente, cualquier persona puede descifrar la firma s con la clave pub del pro m'=D(kpub(s))
        3. Validar la firma: Se compara el resultado m' con el mensaje. Si ambos coinciden, m=m' la firma se valida.
    -Que implica la validacion positiva:
        1. Integridad: Daber que el documento original no se ha manipulado
        2. Autenticacion: Verificacion de firmante
        3. No repudio: El firmante no puede echarse atras.
    2. Aproximacion de la firma digital:
        -Proceso:
            1. Creacion de la firma: Comienza con un mensaje m, calcula el hash h=H(m), se cifra con su clave priv para crear una firma s= sign(kpv h)= Ekpr(h)
            2. Verificacion de la firma: Se puede verificar calculando el hash h1=H(M) del mensaje recibido y decifrando el hash h2= Dkpub(s) con la clave pub de remitente, si coinciden, entonces se
                valida la firma.
    3. Ataque Man-in-the-middle:
        Este ataque representa riesgos significativos en la criptografia de claves pub, en el cual la autenticidad de las claves pub intercambiadas entre los users no esta garantizada, ocurre cuando un
        agente malicioso se interpone en la comunicacion, pudiendo interceptar y manipular el mensaje.

    [https://en.wikipedia.org/wiki/Public_key_certificate]
    [https://en.wikipedia.org/wiki/Public_key_certificate]
    4. Certificados digitales:
        1. Version: Estandar X509, actualmente 3
        2. Numeros de serie: Usando por la autoriedad del certificado, con un entropia de 20 bits.
        3. Identificacion de algoritmos: Posicion para ser protegido por la firma.
        4. Identificacion de la autoridad de certificacion: (Distinguished Name, DN único:
            1. CN-COmmonName
            2. L-LocalityNAme
            3. ST-StateOrProvinceName
            4. OrganizationNAME
            5. OU=OrganizationUnityNAME
            6. C-CountryName
        5. Periodo de validez del certificado
        6. Nombre distiguido unico del titular del certificado
        7. Informacion de la clave pub:
            1.Algoritmo
            2.Tamanho de la clave
            3.Exponente
            4.Modulo
        8. Estensiones(opcional): Se intdujo en la version 3, una AC puede utilizar extensiones para emitir un certificado solo para un proposito especifico, como un server HTTP. Pueden ser criticas o no criticas.
        9. Algoritmos de firma del certificado: RSA, DSA, ECC.....
        10.Firma del certificado: El valor de la firma, se corresponde a la clave privada de la AC el hash de la informacion del certificado, firma permite verificar que la clave pub aparece en el certificado.

    4, Los ceritificados digitales no son iguales:
        Misma criptografia per distinta auth:
            1. Validacion de Dominio:
            2. Validacion de Organizacione
            3. Validacion Extendida
        Es relevante destacar que, a pesar de las discrepancias en los procedimientos de validación, todos los certificados digitales ofrecen una seguridad criptográfica igual. Esto se traduce en 256 bits de cifrado simétrico y 2.048 bits de cifrado de clave pública,
        lo cual garantiza una protección robusta.
    5. Como se geera un certificado digital:
        1. Para generar una clave pub: primero hay que generar una clave pub/priv
        2. Presentar la Kpub a ka AC, la AC verifica contruye una declaracuion m que dice la pub J m=(kpub, ID)
        3. La AC firma el mensaje m usando su jpriv y devuelve a alice tanto el mensaje m como la firma s=EkpCA (m)
            [Certa = [(kpub, ID), Ekpub, ID]]

        Este par CertA es el certificado para kpubA. Cuando Bob necesita la clave pública de Alice, primero obtiene el certificado de Alice y verifica la firma de la AC en el certificado. Si la firma es válida, Bob confía en que kpubA es la clave pública de Alice.
        El propósito principal de la firma digital de la AC es probar a Bob que la declaración m fue emitida por la AC. Por supuesto, para verificar la firma de la AC, Bob necesita la clave pública de la AC kpubCA.
        Normalmente, las claves públicas de las ACs vienen preinstaladas en el sistema operativo o en el navegador web. En otras palabras, simplemente asumimos que la clave pública de la AC ya está disponible en la máquina de Bob.
        Ahora, si Mallory intenta reemplazar kpubA por kpubM, será detectado. Así, se dice que los certificados vinculan la identidad de un usuario a su clave pública.

    6. Firma digital:
        1. Verificacion de la firma: calculando el hash con la kprib
        2. Validacion del certificado
        3. Verificacion de la firma:Bob calcula el hash h1 = H(m) de los datos recibidos y descifra el hash cifrado h2 = Dkpub(s) con la clave pública de Alice extraída del certificado. Si los hashes coinciden (h1 = h2), entonces Bob ha confirmado la integridad, autenticidad y no repudio de los datos.
